syntax = "proto3";

package shm;

service ShmControl {
  /// The producer sends a ping request to the consumer for checking if the consumer is alive
  /// or producer is alive.
  rpc Ping(PingRequest) returns (PingResponse);

  /// The producer notifies the consumer that data has been written into the shared memory 
  /// and can be read.
  rpc Notify(NotifyRequest) returns (NotifyResponse);
}

message HandShakeResponse {
  /// The status code of the handshake.
  uint32 status_code = 1;
  
  /// The status message of the handshake.
  string status_message = 2;
}

message PingRequest {
  /// The producer_id uniquely identifies the client.
  string producer_id = 1;
}

message PingResponse {
  /// The status code of the ping.
  uint32 status_code = 1;
  
  /// The status message of the ping.
  string status_message = 2;
}

message NotifyRequest {
  /// The producer_id uniquely identifies the client.
  string producer_id = 1;
}

message NotifyResponse {}
